
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BAR CLOSE_B CLOSE_P DBL_COLON EQ NAME NEQ NOT OPEN_B OPEN_P OR SLASH STAR STRINGxpath : path BAR xpathxpath : pathpath : SLASH rel_pathpath : rel_pathrel_path : step SLASH rel_pathrel_path : steprel_path : OPEN_P xpath CLOSE_Pstep : NAME DBL_COLON node_test\n            | NAME DBL_COLON node_test OPEN_B filter_expr CLOSE_Bnode_test : STAR\n                 | NAME\n                 | NAME OPEN_P CLOSE_Pfilter_expr : filter_conj OR filter_exprfilter_expr : filter_conjfilter_conj : filter_neg AND filter_conjfilter_conj : filter_negfilter_neg : NOT filter_negfilter_neg : filter_atomfilter_neg : OPEN_P filter_expr CLOSE_Pfilter_atom : xpathfilter_atom : xpath operator xpathfilter_atom : xpath operator const\n                   | const operator xpathoperator : EQ \n                | NEQconst : STRING'
    
_lr_action_items = {'SLASH':([0,5,6,8,16,17,18,20,21,25,27,31,32,33,37,38,39,40,],[3,10,3,3,-11,-8,-10,3,-12,3,3,-9,3,3,3,-24,-25,3,]),'OPEN_P':([0,3,6,8,10,16,20,25,27,32,33,37,38,39,40,],[6,6,6,6,6,19,27,27,27,27,27,6,-24,-25,6,]),'NAME':([0,3,6,8,10,12,20,25,27,32,33,37,38,39,40,],[7,7,7,7,7,16,7,7,7,7,7,7,-24,-25,7,]),'$end':([1,2,4,5,9,13,14,15,16,17,18,21,31,],[0,-2,-4,-6,-3,-1,-5,-7,-11,-8,-10,-12,-9,]),'BAR':([2,4,5,9,14,15,16,17,18,21,31,],[8,-4,-6,-3,-5,-7,-11,-8,-10,-12,-9,]),'CLOSE_P':([2,4,5,9,11,13,14,15,16,17,18,19,21,23,24,26,28,30,31,34,35,36,41,42,43,44,45,46,],[-2,-4,-6,-3,15,-1,-5,-7,-11,-8,-10,21,-12,-14,-16,-18,-20,-26,-9,-17,43,15,-13,-15,-19,-21,-22,-23,]),'EQ':([2,4,5,9,13,14,15,16,17,18,21,28,29,30,31,36,],[-2,-4,-6,-3,-1,-5,-7,-11,-8,-10,-12,38,38,-26,-9,38,]),'NEQ':([2,4,5,9,13,14,15,16,17,18,21,28,29,30,31,36,],[-2,-4,-6,-3,-1,-5,-7,-11,-8,-10,-12,39,39,-26,-9,39,]),'AND':([2,4,5,9,13,14,15,16,17,18,21,24,26,28,30,31,34,36,43,44,45,46,],[-2,-4,-6,-3,-1,-5,-7,-11,-8,-10,-12,33,-18,-20,-26,-9,-17,-20,-19,-21,-22,-23,]),'OR':([2,4,5,9,13,14,15,16,17,18,21,23,24,26,28,30,31,34,36,42,43,44,45,46,],[-2,-4,-6,-3,-1,-5,-7,-11,-8,-10,-12,32,-16,-18,-20,-26,-9,-17,-20,-15,-19,-21,-22,-23,]),'CLOSE_B':([2,4,5,9,13,14,15,16,17,18,21,22,23,24,26,28,30,31,34,41,42,43,44,45,46,],[-2,-4,-6,-3,-1,-5,-7,-11,-8,-10,-12,31,-14,-16,-18,-20,-26,-9,-17,-13,-15,-19,-21,-22,-23,]),'DBL_COLON':([7,],[12,]),'STAR':([12,],[18,]),'OPEN_B':([16,17,18,21,],[-11,20,-10,-12,]),'NOT':([20,25,27,32,33,],[25,25,25,25,25,]),'STRING':([20,25,27,32,33,37,38,39,],[30,30,30,30,30,30,-24,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'xpath':([0,6,8,20,25,27,32,33,37,40,],[1,11,13,28,28,36,28,28,44,46,]),'path':([0,6,8,20,25,27,32,33,37,40,],[2,2,2,2,2,2,2,2,2,2,]),'rel_path':([0,3,6,8,10,20,25,27,32,33,37,40,],[4,9,4,4,14,4,4,4,4,4,4,4,]),'step':([0,3,6,8,10,20,25,27,32,33,37,40,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'node_test':([12,],[17,]),'filter_expr':([20,27,32,],[22,35,41,]),'filter_conj':([20,27,32,33,],[23,23,23,42,]),'filter_neg':([20,25,27,32,33,],[24,34,24,24,24,]),'filter_atom':([20,25,27,32,33,],[26,26,26,26,26,]),'const':([20,25,27,32,33,37,],[29,29,29,29,29,45,]),'operator':([28,29,36,],[37,40,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> xpath","S'",1,None,None,None),
  ('xpath -> path BAR xpath','xpath',3,'p_xpath_bar','xpath.py',96),
  ('xpath -> path','xpath',1,'p_xpath_path','xpath.py',101),
  ('path -> SLASH rel_path','path',2,'p_path_slash','xpath.py',105),
  ('path -> rel_path','path',1,'p_path_rel_path','xpath.py',110),
  ('rel_path -> step SLASH rel_path','rel_path',3,'p_rel_path_slash','xpath.py',114),
  ('rel_path -> step','rel_path',1,'p_rel_path_step','xpath.py',120),
  ('rel_path -> OPEN_P xpath CLOSE_P','rel_path',3,'p_rel_path_xpath','xpath.py',124),
  ('step -> NAME DBL_COLON node_test','step',3,'p_step','xpath.py',128),
  ('step -> NAME DBL_COLON node_test OPEN_B filter_expr CLOSE_B','step',6,'p_step','xpath.py',129),
  ('node_test -> STAR','node_test',1,'p_node_test','xpath.py',145),
  ('node_test -> NAME','node_test',1,'p_node_test','xpath.py',146),
  ('node_test -> NAME OPEN_P CLOSE_P','node_test',3,'p_node_test','xpath.py',147),
  ('filter_expr -> filter_conj OR filter_expr','filter_expr',3,'p_filter_expr_or','xpath.py',160),
  ('filter_expr -> filter_conj','filter_expr',1,'p_filter_expr_conj','xpath.py',166),
  ('filter_conj -> filter_neg AND filter_conj','filter_conj',3,'p_filter_conj_and','xpath.py',170),
  ('filter_conj -> filter_neg','filter_conj',1,'p_filter_conj_neg','xpath.py',176),
  ('filter_neg -> NOT filter_neg','filter_neg',2,'p_filter_neg_not','xpath.py',180),
  ('filter_neg -> filter_atom','filter_neg',1,'p_filter_neg_atom','xpath.py',185),
  ('filter_neg -> OPEN_P filter_expr CLOSE_P','filter_neg',3,'p_filter_neg_expr','xpath.py',189),
  ('filter_atom -> xpath','filter_atom',1,'p_filter_atom_exists','xpath.py',193),
  ('filter_atom -> xpath operator xpath','filter_atom',3,'p_filter_atom_op_xpath','xpath.py',198),
  ('filter_atom -> xpath operator const','filter_atom',3,'p_filter_atom_op_const','xpath.py',205),
  ('filter_atom -> const operator xpath','filter_atom',3,'p_filter_atom_op_const','xpath.py',206),
  ('operator -> EQ','operator',1,'p_operator','xpath.py',219),
  ('operator -> NEQ','operator',1,'p_operator','xpath.py',220),
  ('const -> STRING','const',1,'p_const','xpath.py',224),
]
